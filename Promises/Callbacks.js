// Каллбэк - это функция, которая выполниться после чего то

// Например при работае с асинхронным кодом мы должны удостовериться что фунция запуститься только после выполнение этого кода
// для этого можем использовать каллбэки

const func = () => {
    setTimeout(() => {
        console.log('Timeout')
    }, 1000)

    const func2 = () => {
        console.log('Func 2')
    }
    func2()

    return
}

func()
// Например при таком коде функция 2 выполниться быстрее чем Timeout, но мы можем добиться другого поведения

const func1 = () => {
    setTimeout(() => {
        console.log('Timeout')
        +function() {console.log('Func 2')}()
    }, 1000)
}
func1()

// Таким образом функция 2 запустить после Timeout, 
// Но что будет если вдруг функция 2 тоже будет асинхронной и после этой функции мы хотим выполнить какое-то действие

const func2 = () => {
    setTimeout(() => {
        console.log('Timeout 1')
        +function() {
            setTimeout(() => {
                console.log('Timeout 2')
                +function() {
                    console.log('Func 3')
                }()
            }, 500)
        }()
    }, 1000)
}

func2()

// Таким образом мы получаем так называемый ад каллбэков если даже сейчас посмотреть на код выше, сложно разобраться что там
// происходит беглым взглядом. Хотя сам код является элементарным.

// Как изюежать такой проблемы мы узнаем дальше 